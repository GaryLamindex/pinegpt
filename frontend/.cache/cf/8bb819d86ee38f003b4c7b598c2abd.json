{"id":"../node_modules/mdast-util-to-hast/lib/handlers/text.js","dependencies":[{"name":"C:\\Users\\user\\Documents\\GitHub\\pinegpt\\frontend\\package.json","includedInParent":true,"mtime":1683258653216},{"name":"C:\\Users\\user\\Documents\\GitHub\\pinegpt\\frontend\\node_modules\\mdast-util-to-hast\\package.json","includedInParent":true,"mtime":1683258629907},{"name":"trim-lines","loc":{"line":8,"column":24,"index":218},"parent":"C:\\Users\\user\\Documents\\GitHub\\pinegpt\\frontend\\node_modules\\mdast-util-to-hast\\lib\\handlers\\text.js","resolved":"C:\\Users\\user\\Documents\\GitHub\\pinegpt\\frontend\\node_modules\\trim-lines\\index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.text = text;\nvar _trimLines = require(\"trim-lines\");\n/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').Text} HastText\n * @typedef {import('mdast').Text} MdastText\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `text` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastText} node\n *   mdast node.\n * @returns {HastText | HastElement}\n *   hast node.\n */\nfunction text(state, node) {\n  /** @type {HastText} */\n  const result = {\n    type: 'text',\n    value: (0, _trimLines.trimLines)(String(node.value))\n  };\n  state.patch(node, result);\n  return state.applyData(node, result);\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":7,"column":0},"source":"../node_modules/mdast-util-to-hast/lib/handlers/text.js","original":{"line":8,"column":0}},{"generated":{"line":7,"column":4},"source":"../node_modules/mdast-util-to-hast/lib/handlers/text.js","original":{"line":8,"column":0},"name":"_trimLines"},{"generated":{"line":7,"column":14},"source":"../node_modules/mdast-util-to-hast/lib/handlers/text.js","original":{"line":8,"column":0}},{"generated":{"line":7,"column":17},"source":"../node_modules/mdast-util-to-hast/lib/handlers/text.js","original":{"line":8,"column":0},"name":"require"},{"generated":{"line":7,"column":24},"source":"../node_modules/mdast-util-to-hast/lib/handlers/text.js","original":{"line":8,"column":0}},{"generated":{"line":8,"column":0},"source":"../node_modules/mdast-util-to-hast/lib/handlers/text.js","original":{"line":1,"column":0}},{"generated":{"line":9,"column":0},"source":"../node_modules/mdast-util-to-hast/lib/handlers/text.js","original":{"line":2,"column":0}},{"generated":{"line":10,"column":0},"source":"../node_modules/mdast-util-to-hast/lib/handlers/text.js","original":{"line":3,"column":0}},{"generated":{"line":11,"column":0},"source":"../node_modules/mdast-util-to-hast/lib/handlers/text.js","original":{"line":4,"column":0}},{"generated":{"line":12,"column":0},"source":"../node_modules/mdast-util-to-hast/lib/handlers/text.js","original":{"line":5,"column":0}},{"generated":{"line":13,"column":0},"source":"../node_modules/mdast-util-to-hast/lib/handlers/text.js","original":{"line":6,"column":0}},{"generated":{"line":15,"column":0},"source":"../node_modules/mdast-util-to-hast/lib/handlers/text.js","original":{"line":10,"column":0}},{"generated":{"line":16,"column":0},"source":"../node_modules/mdast-util-to-hast/lib/handlers/text.js","original":{"line":11,"column":0}},{"generated":{"line":17,"column":0},"source":"../node_modules/mdast-util-to-hast/lib/handlers/text.js","original":{"line":12,"column":0}},{"generated":{"line":18,"column":0},"source":"../node_modules/mdast-util-to-hast/lib/handlers/text.js","original":{"line":13,"column":0}},{"generated":{"line":19,"column":0},"source":"../node_modules/mdast-util-to-hast/lib/handlers/text.js","original":{"line":14,"column":0}},{"generated":{"line":20,"column":0},"source":"../node_modules/mdast-util-to-hast/lib/handlers/text.js","original":{"line":15,"column":0}},{"generated":{"line":21,"column":0},"source":"../node_modules/mdast-util-to-hast/lib/handlers/text.js","original":{"line":16,"column":0}},{"generated":{"line":22,"column":0},"source":"../node_modules/mdast-util-to-hast/lib/handlers/text.js","original":{"line":17,"column":0}},{"generated":{"line":23,"column":0},"source":"../node_modules/mdast-util-to-hast/lib/handlers/text.js","original":{"line":18,"column":0}},{"generated":{"line":24,"column":0},"source":"../node_modules/mdast-util-to-hast/lib/handlers/text.js","original":{"line":19,"column":0}},{"generated":{"line":25,"column":0},"source":"../node_modules/mdast-util-to-hast/lib/handlers/text.js","original":{"line":20,"column":7}},{"generated":{"line":25,"column":9},"source":"../node_modules/mdast-util-to-hast/lib/handlers/text.js","original":{"line":20,"column":16},"name":"text"},{"generated":{"line":25,"column":13},"source":"../node_modules/mdast-util-to-hast/lib/handlers/text.js","original":{"line":20,"column":20},"name":"text"},{"generated":{"line":25,"column":14},"source":"../node_modules/mdast-util-to-hast/lib/handlers/text.js","original":{"line":20,"column":21},"name":"state"},{"generated":{"line":25,"column":19},"source":"../node_modules/mdast-util-to-hast/lib/handlers/text.js","original":{"line":20,"column":26}},{"generated":{"line":25,"column":21},"source":"../node_modules/mdast-util-to-hast/lib/handlers/text.js","original":{"line":20,"column":28},"name":"node"},{"generated":{"line":25,"column":25},"source":"../node_modules/mdast-util-to-hast/lib/handlers/text.js","original":{"line":20,"column":32}},{"generated":{"line":25,"column":27},"source":"../node_modules/mdast-util-to-hast/lib/handlers/text.js","original":{"line":20,"column":34}},{"generated":{"line":26,"column":2},"source":"../node_modules/mdast-util-to-hast/lib/handlers/text.js","original":{"line":21,"column":2}},{"generated":{"line":27,"column":2},"source":"../node_modules/mdast-util-to-hast/lib/handlers/text.js","original":{"line":22,"column":2}},{"generated":{"line":27,"column":8},"source":"../node_modules/mdast-util-to-hast/lib/handlers/text.js","original":{"line":22,"column":8},"name":"result"},{"generated":{"line":27,"column":14},"source":"../node_modules/mdast-util-to-hast/lib/handlers/text.js","original":{"line":22,"column":14}},{"generated":{"line":27,"column":17},"source":"../node_modules/mdast-util-to-hast/lib/handlers/text.js","original":{"line":22,"column":17}},{"generated":{"line":28,"column":4},"source":"../node_modules/mdast-util-to-hast/lib/handlers/text.js","original":{"line":22,"column":18},"name":"type"},{"generated":{"line":28,"column":8},"source":"../node_modules/mdast-util-to-hast/lib/handlers/text.js","original":{"line":22,"column":22}},{"generated":{"line":28,"column":10},"source":"../node_modules/mdast-util-to-hast/lib/handlers/text.js","original":{"line":22,"column":24}},{"generated":{"line":28,"column":16},"source":"../node_modules/mdast-util-to-hast/lib/handlers/text.js","original":{"line":22,"column":30}},{"generated":{"line":29,"column":4},"source":"../node_modules/mdast-util-to-hast/lib/handlers/text.js","original":{"line":22,"column":32},"name":"value"},{"generated":{"line":29,"column":9},"source":"../node_modules/mdast-util-to-hast/lib/handlers/text.js","original":{"line":22,"column":37}},{"generated":{"line":29,"column":11},"source":"../node_modules/mdast-util-to-hast/lib/handlers/text.js","original":{"line":22,"column":39}},{"generated":{"line":29,"column":15},"source":"../node_modules/mdast-util-to-hast/lib/handlers/text.js","original":{"line":22,"column":39},"name":"trimLines"},{"generated":{"line":29,"column":35},"source":"../node_modules/mdast-util-to-hast/lib/handlers/text.js","original":{"line":22,"column":48}},{"generated":{"line":29,"column":37},"source":"../node_modules/mdast-util-to-hast/lib/handlers/text.js","original":{"line":22,"column":49},"name":"String"},{"generated":{"line":29,"column":43},"source":"../node_modules/mdast-util-to-hast/lib/handlers/text.js","original":{"line":22,"column":55}},{"generated":{"line":29,"column":44},"source":"../node_modules/mdast-util-to-hast/lib/handlers/text.js","original":{"line":22,"column":56},"name":"node"},{"generated":{"line":29,"column":48},"source":"../node_modules/mdast-util-to-hast/lib/handlers/text.js","original":{"line":22,"column":60}},{"generated":{"line":29,"column":49},"source":"../node_modules/mdast-util-to-hast/lib/handlers/text.js","original":{"line":22,"column":61},"name":"value"},{"generated":{"line":29,"column":54},"source":"../node_modules/mdast-util-to-hast/lib/handlers/text.js","original":{"line":22,"column":66}},{"generated":{"line":29,"column":55},"source":"../node_modules/mdast-util-to-hast/lib/handlers/text.js","original":{"line":22,"column":67}},{"generated":{"line":30,"column":2},"source":"../node_modules/mdast-util-to-hast/lib/handlers/text.js","original":{"line":22,"column":68}},{"generated":{"line":30,"column":3},"source":"../node_modules/mdast-util-to-hast/lib/handlers/text.js","original":{"line":22,"column":69}},{"generated":{"line":31,"column":2},"source":"../node_modules/mdast-util-to-hast/lib/handlers/text.js","original":{"line":23,"column":2},"name":"state"},{"generated":{"line":31,"column":7},"source":"../node_modules/mdast-util-to-hast/lib/handlers/text.js","original":{"line":23,"column":7}},{"generated":{"line":31,"column":8},"source":"../node_modules/mdast-util-to-hast/lib/handlers/text.js","original":{"line":23,"column":8},"name":"patch"},{"generated":{"line":31,"column":13},"source":"../node_modules/mdast-util-to-hast/lib/handlers/text.js","original":{"line":23,"column":13}},{"generated":{"line":31,"column":14},"source":"../node_modules/mdast-util-to-hast/lib/handlers/text.js","original":{"line":23,"column":14},"name":"node"},{"generated":{"line":31,"column":18},"source":"../node_modules/mdast-util-to-hast/lib/handlers/text.js","original":{"line":23,"column":18}},{"generated":{"line":31,"column":20},"source":"../node_modules/mdast-util-to-hast/lib/handlers/text.js","original":{"line":23,"column":20},"name":"result"},{"generated":{"line":31,"column":26},"source":"../node_modules/mdast-util-to-hast/lib/handlers/text.js","original":{"line":23,"column":26}},{"generated":{"line":31,"column":27},"source":"../node_modules/mdast-util-to-hast/lib/handlers/text.js","original":{"line":23,"column":27}},{"generated":{"line":32,"column":2},"source":"../node_modules/mdast-util-to-hast/lib/handlers/text.js","original":{"line":24,"column":2}},{"generated":{"line":32,"column":9},"source":"../node_modules/mdast-util-to-hast/lib/handlers/text.js","original":{"line":24,"column":9},"name":"state"},{"generated":{"line":32,"column":14},"source":"../node_modules/mdast-util-to-hast/lib/handlers/text.js","original":{"line":24,"column":14}},{"generated":{"line":32,"column":15},"source":"../node_modules/mdast-util-to-hast/lib/handlers/text.js","original":{"line":24,"column":15},"name":"applyData"},{"generated":{"line":32,"column":24},"source":"../node_modules/mdast-util-to-hast/lib/handlers/text.js","original":{"line":24,"column":24}},{"generated":{"line":32,"column":25},"source":"../node_modules/mdast-util-to-hast/lib/handlers/text.js","original":{"line":24,"column":25},"name":"node"},{"generated":{"line":32,"column":29},"source":"../node_modules/mdast-util-to-hast/lib/handlers/text.js","original":{"line":24,"column":29}},{"generated":{"line":32,"column":31},"source":"../node_modules/mdast-util-to-hast/lib/handlers/text.js","original":{"line":24,"column":31},"name":"result"},{"generated":{"line":32,"column":37},"source":"../node_modules/mdast-util-to-hast/lib/handlers/text.js","original":{"line":24,"column":37}},{"generated":{"line":32,"column":38},"source":"../node_modules/mdast-util-to-hast/lib/handlers/text.js","original":{"line":24,"column":38}},{"generated":{"line":33,"column":0},"source":"../node_modules/mdast-util-to-hast/lib/handlers/text.js","original":{"line":25,"column":0}}],"sources":{"../node_modules/mdast-util-to-hast/lib/handlers/text.js":"/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').Text} HastText\n * @typedef {import('mdast').Text} MdastText\n * @typedef {import('../state.js').State} State\n */\n\nimport {trimLines} from 'trim-lines'\n\n/**\n * Turn an mdast `text` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastText} node\n *   mdast node.\n * @returns {HastText | HastElement}\n *   hast node.\n */\nexport function text(state, node) {\n  /** @type {HastText} */\n  const result = {type: 'text', value: trimLines(String(node.value))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n"},"lineCount":null}},"error":null,"hash":"28b819946e9b24f819c082a86186f2fc","cacheData":{"env":{}}}