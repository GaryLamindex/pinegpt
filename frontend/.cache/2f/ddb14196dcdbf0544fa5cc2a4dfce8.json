{"id":"../node_modules/openai/dist/common.js","dependencies":[{"name":"C:\\Users\\user\\Documents\\GitHub\\tradingview-chatpad\\package.json","includedInParent":true,"mtime":1682908427806},{"name":"C:\\Users\\user\\Documents\\GitHub\\tradingview-chatpad\\node_modules\\openai\\package.json","includedInParent":true,"mtime":1682908384528},{"name":"./base","loc":{"line":26,"column":23,"index":1412},"parent":"C:\\Users\\user\\Documents\\GitHub\\tradingview-chatpad\\node_modules\\openai\\dist\\common.js","resolved":"C:\\Users\\user\\Documents\\GitHub\\tradingview-chatpad\\node_modules\\openai\\dist\\base.js"}],"generated":{"js":"\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * OpenAI API\n * APIs for sampling from and fine-tuning language models\n *\n * The version of the OpenAPI document: 1.2.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createRequestFunction = exports.toPathString = exports.serializeDataIfNeeded = exports.setSearchParams = exports.setOAuthToObject = exports.setBearerAuthToObject = exports.setBasicAuthToObject = exports.setApiKeyToObject = exports.assertParamExists = exports.DUMMY_BASE_URL = void 0;\nconst base_1 = require(\"./base\");\n/**\n *\n * @export\n */\nexports.DUMMY_BASE_URL = 'https://example.com';\n/**\n *\n * @throws {RequiredError}\n * @export\n */\nexports.assertParamExists = function (functionName, paramName, paramValue) {\n    if (paramValue === null || paramValue === undefined) {\n        throw new base_1.RequiredError(paramName, `Required parameter ${paramName} was null or undefined when calling ${functionName}.`);\n    }\n};\n/**\n *\n * @export\n */\nexports.setApiKeyToObject = function (object, keyParamName, configuration) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (configuration && configuration.apiKey) {\n            const localVarApiKeyValue = typeof configuration.apiKey === 'function'\n                ? yield configuration.apiKey(keyParamName)\n                : yield configuration.apiKey;\n            object[keyParamName] = localVarApiKeyValue;\n        }\n    });\n};\n/**\n *\n * @export\n */\nexports.setBasicAuthToObject = function (object, configuration) {\n    if (configuration && (configuration.username || configuration.password)) {\n        object[\"auth\"] = { username: configuration.username, password: configuration.password };\n    }\n};\n/**\n *\n * @export\n */\nexports.setBearerAuthToObject = function (object, configuration) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (configuration && configuration.accessToken) {\n            const accessToken = typeof configuration.accessToken === 'function'\n                ? yield configuration.accessToken()\n                : yield configuration.accessToken;\n            object[\"Authorization\"] = \"Bearer \" + accessToken;\n        }\n    });\n};\n/**\n *\n * @export\n */\nexports.setOAuthToObject = function (object, name, scopes, configuration) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (configuration && configuration.accessToken) {\n            const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                ? yield configuration.accessToken(name, scopes)\n                : yield configuration.accessToken;\n            object[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n        }\n    });\n};\nfunction setFlattenedQueryParams(urlSearchParams, parameter, key = \"\") {\n    if (parameter == null)\n        return;\n    if (typeof parameter === \"object\") {\n        if (Array.isArray(parameter)) {\n            parameter.forEach(item => setFlattenedQueryParams(urlSearchParams, item, key));\n        }\n        else {\n            Object.keys(parameter).forEach(currentKey => setFlattenedQueryParams(urlSearchParams, parameter[currentKey], `${key}${key !== '' ? '.' : ''}${currentKey}`));\n        }\n    }\n    else {\n        if (urlSearchParams.has(key)) {\n            urlSearchParams.append(key, parameter);\n        }\n        else {\n            urlSearchParams.set(key, parameter);\n        }\n    }\n}\n/**\n *\n * @export\n */\nexports.setSearchParams = function (url, ...objects) {\n    const searchParams = new URLSearchParams(url.search);\n    setFlattenedQueryParams(searchParams, objects);\n    url.search = searchParams.toString();\n};\n/**\n *\n * @export\n */\nexports.serializeDataIfNeeded = function (value, requestOptions, configuration) {\n    const nonString = typeof value !== 'string';\n    const needsSerialization = nonString && configuration && configuration.isJsonMime\n        ? configuration.isJsonMime(requestOptions.headers['Content-Type'])\n        : nonString;\n    return needsSerialization\n        ? JSON.stringify(value !== undefined ? value : {})\n        : (value || \"\");\n};\n/**\n *\n * @export\n */\nexports.toPathString = function (url) {\n    return url.pathname + url.search + url.hash;\n};\n/**\n *\n * @export\n */\nexports.createRequestFunction = function (axiosArgs, globalAxios, BASE_PATH, configuration) {\n    return (axios = globalAxios, basePath = BASE_PATH) => {\n        const axiosRequestArgs = Object.assign(Object.assign({}, axiosArgs.options), { url: ((configuration === null || configuration === void 0 ? void 0 : configuration.basePath) || basePath) + axiosArgs.url });\n        return axios.request(axiosRequestArgs);\n    };\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/openai/dist/common.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/openai/dist/common.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}}],"sources":{"../node_modules/openai/dist/common.js":"\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * OpenAI API\n * APIs for sampling from and fine-tuning language models\n *\n * The version of the OpenAPI document: 1.2.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createRequestFunction = exports.toPathString = exports.serializeDataIfNeeded = exports.setSearchParams = exports.setOAuthToObject = exports.setBearerAuthToObject = exports.setBasicAuthToObject = exports.setApiKeyToObject = exports.assertParamExists = exports.DUMMY_BASE_URL = void 0;\nconst base_1 = require(\"./base\");\n/**\n *\n * @export\n */\nexports.DUMMY_BASE_URL = 'https://example.com';\n/**\n *\n * @throws {RequiredError}\n * @export\n */\nexports.assertParamExists = function (functionName, paramName, paramValue) {\n    if (paramValue === null || paramValue === undefined) {\n        throw new base_1.RequiredError(paramName, `Required parameter ${paramName} was null or undefined when calling ${functionName}.`);\n    }\n};\n/**\n *\n * @export\n */\nexports.setApiKeyToObject = function (object, keyParamName, configuration) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (configuration && configuration.apiKey) {\n            const localVarApiKeyValue = typeof configuration.apiKey === 'function'\n                ? yield configuration.apiKey(keyParamName)\n                : yield configuration.apiKey;\n            object[keyParamName] = localVarApiKeyValue;\n        }\n    });\n};\n/**\n *\n * @export\n */\nexports.setBasicAuthToObject = function (object, configuration) {\n    if (configuration && (configuration.username || configuration.password)) {\n        object[\"auth\"] = { username: configuration.username, password: configuration.password };\n    }\n};\n/**\n *\n * @export\n */\nexports.setBearerAuthToObject = function (object, configuration) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (configuration && configuration.accessToken) {\n            const accessToken = typeof configuration.accessToken === 'function'\n                ? yield configuration.accessToken()\n                : yield configuration.accessToken;\n            object[\"Authorization\"] = \"Bearer \" + accessToken;\n        }\n    });\n};\n/**\n *\n * @export\n */\nexports.setOAuthToObject = function (object, name, scopes, configuration) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (configuration && configuration.accessToken) {\n            const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                ? yield configuration.accessToken(name, scopes)\n                : yield configuration.accessToken;\n            object[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n        }\n    });\n};\nfunction setFlattenedQueryParams(urlSearchParams, parameter, key = \"\") {\n    if (parameter == null)\n        return;\n    if (typeof parameter === \"object\") {\n        if (Array.isArray(parameter)) {\n            parameter.forEach(item => setFlattenedQueryParams(urlSearchParams, item, key));\n        }\n        else {\n            Object.keys(parameter).forEach(currentKey => setFlattenedQueryParams(urlSearchParams, parameter[currentKey], `${key}${key !== '' ? '.' : ''}${currentKey}`));\n        }\n    }\n    else {\n        if (urlSearchParams.has(key)) {\n            urlSearchParams.append(key, parameter);\n        }\n        else {\n            urlSearchParams.set(key, parameter);\n        }\n    }\n}\n/**\n *\n * @export\n */\nexports.setSearchParams = function (url, ...objects) {\n    const searchParams = new URLSearchParams(url.search);\n    setFlattenedQueryParams(searchParams, objects);\n    url.search = searchParams.toString();\n};\n/**\n *\n * @export\n */\nexports.serializeDataIfNeeded = function (value, requestOptions, configuration) {\n    const nonString = typeof value !== 'string';\n    const needsSerialization = nonString && configuration && configuration.isJsonMime\n        ? configuration.isJsonMime(requestOptions.headers['Content-Type'])\n        : nonString;\n    return needsSerialization\n        ? JSON.stringify(value !== undefined ? value : {})\n        : (value || \"\");\n};\n/**\n *\n * @export\n */\nexports.toPathString = function (url) {\n    return url.pathname + url.search + url.hash;\n};\n/**\n *\n * @export\n */\nexports.createRequestFunction = function (axiosArgs, globalAxios, BASE_PATH, configuration) {\n    return (axios = globalAxios, basePath = BASE_PATH) => {\n        const axiosRequestArgs = Object.assign(Object.assign({}, axiosArgs.options), { url: ((configuration === null || configuration === void 0 ? void 0 : configuration.basePath) || basePath) + axiosArgs.url });\n        return axios.request(axiosRequestArgs);\n    };\n};\n"},"lineCount":152}},"error":null,"hash":"716b12f4c2b4b758f8c40fe2a97e1515","cacheData":{"env":{}}}