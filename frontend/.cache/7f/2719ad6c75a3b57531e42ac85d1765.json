{"id":"../node_modules/hast-util-whitespace/index.js","dependencies":[{"name":"C:\\Users\\user\\Documents\\GitHub\\tradingview-chatpad\\package.json","includedInParent":true,"mtime":1682908427806},{"name":"C:\\Users\\user\\Documents\\GitHub\\tradingview-chatpad\\node_modules\\hast-util-whitespace\\package.json","includedInParent":true,"mtime":1682908403840}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.whitespace = whitespace;\n/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {unknown} thing\n *   Thing to check (typically `Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`).\n *   If a node is passed it must be a `Text` node, whose `value` field is\n *   checked.\n */\nfunction whitespace(thing) {\n  /** @type {string} */\n  const value =\n  // @ts-expect-error looks like a node.\n  thing && typeof thing === 'object' && thing.type === 'text' ?\n  // @ts-expect-error looks like a text.\n  thing.value || '' : thing;\n\n  // HTML whitespace expression.\n  // See <https://infra.spec.whatwg.org/#ascii-whitespace>.\n  return typeof value === 'string' && value.replace(/[ \\t\\n\\f\\r]/g, '') === '';\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":7,"column":0},"source":"../node_modules/hast-util-whitespace/index.js","original":{"line":1,"column":0}},{"generated":{"line":8,"column":0},"source":"../node_modules/hast-util-whitespace/index.js","original":{"line":2,"column":0}},{"generated":{"line":9,"column":0},"source":"../node_modules/hast-util-whitespace/index.js","original":{"line":3,"column":0}},{"generated":{"line":10,"column":0},"source":"../node_modules/hast-util-whitespace/index.js","original":{"line":4,"column":0}},{"generated":{"line":11,"column":0},"source":"../node_modules/hast-util-whitespace/index.js","original":{"line":5,"column":0}},{"generated":{"line":12,"column":0},"source":"../node_modules/hast-util-whitespace/index.js","original":{"line":6,"column":0}},{"generated":{"line":13,"column":0},"source":"../node_modules/hast-util-whitespace/index.js","original":{"line":7,"column":0}},{"generated":{"line":14,"column":0},"source":"../node_modules/hast-util-whitespace/index.js","original":{"line":8,"column":0}},{"generated":{"line":15,"column":0},"source":"../node_modules/hast-util-whitespace/index.js","original":{"line":9,"column":0}},{"generated":{"line":16,"column":0},"source":"../node_modules/hast-util-whitespace/index.js","original":{"line":10,"column":0}},{"generated":{"line":17,"column":0},"source":"../node_modules/hast-util-whitespace/index.js","original":{"line":11,"column":0}},{"generated":{"line":18,"column":0},"source":"../node_modules/hast-util-whitespace/index.js","original":{"line":12,"column":0}},{"generated":{"line":19,"column":0},"source":"../node_modules/hast-util-whitespace/index.js","original":{"line":13,"column":7}},{"generated":{"line":19,"column":9},"source":"../node_modules/hast-util-whitespace/index.js","original":{"line":13,"column":16},"name":"whitespace"},{"generated":{"line":19,"column":19},"source":"../node_modules/hast-util-whitespace/index.js","original":{"line":13,"column":26},"name":"whitespace"},{"generated":{"line":19,"column":20},"source":"../node_modules/hast-util-whitespace/index.js","original":{"line":13,"column":27},"name":"thing"},{"generated":{"line":19,"column":25},"source":"../node_modules/hast-util-whitespace/index.js","original":{"line":13,"column":32}},{"generated":{"line":19,"column":27},"source":"../node_modules/hast-util-whitespace/index.js","original":{"line":13,"column":34}},{"generated":{"line":20,"column":2},"source":"../node_modules/hast-util-whitespace/index.js","original":{"line":14,"column":2}},{"generated":{"line":21,"column":2},"source":"../node_modules/hast-util-whitespace/index.js","original":{"line":15,"column":2}},{"generated":{"line":21,"column":8},"source":"../node_modules/hast-util-whitespace/index.js","original":{"line":15,"column":8},"name":"value"},{"generated":{"line":21,"column":13},"source":"../node_modules/hast-util-whitespace/index.js","original":{"line":15,"column":13}},{"generated":{"line":22,"column":2},"source":"../node_modules/hast-util-whitespace/index.js","original":{"line":16,"column":4}},{"generated":{"line":23,"column":2},"source":"../node_modules/hast-util-whitespace/index.js","original":{"line":17,"column":4},"name":"thing"},{"generated":{"line":23,"column":7},"source":"../node_modules/hast-util-whitespace/index.js","original":{"line":17,"column":9}},{"generated":{"line":23,"column":11},"source":"../node_modules/hast-util-whitespace/index.js","original":{"line":17,"column":13}},{"generated":{"line":23,"column":18},"source":"../node_modules/hast-util-whitespace/index.js","original":{"line":17,"column":20},"name":"thing"},{"generated":{"line":23,"column":23},"source":"../node_modules/hast-util-whitespace/index.js","original":{"line":17,"column":25}},{"generated":{"line":23,"column":28},"source":"../node_modules/hast-util-whitespace/index.js","original":{"line":17,"column":30}},{"generated":{"line":23,"column":36},"source":"../node_modules/hast-util-whitespace/index.js","original":{"line":17,"column":38}},{"generated":{"line":23,"column":40},"source":"../node_modules/hast-util-whitespace/index.js","original":{"line":17,"column":42},"name":"thing"},{"generated":{"line":23,"column":45},"source":"../node_modules/hast-util-whitespace/index.js","original":{"line":17,"column":47}},{"generated":{"line":23,"column":46},"source":"../node_modules/hast-util-whitespace/index.js","original":{"line":17,"column":48},"name":"type"},{"generated":{"line":23,"column":50},"source":"../node_modules/hast-util-whitespace/index.js","original":{"line":17,"column":52}},{"generated":{"line":23,"column":55},"source":"../node_modules/hast-util-whitespace/index.js","original":{"line":17,"column":57}},{"generated":{"line":23,"column":61},"source":"../node_modules/hast-util-whitespace/index.js","original":{"line":17,"column":63}},{"generated":{"line":24,"column":2},"source":"../node_modules/hast-util-whitespace/index.js","original":{"line":18,"column":8}},{"generated":{"line":25,"column":2},"source":"../node_modules/hast-util-whitespace/index.js","original":{"line":19,"column":8},"name":"thing"},{"generated":{"line":25,"column":7},"source":"../node_modules/hast-util-whitespace/index.js","original":{"line":19,"column":13}},{"generated":{"line":25,"column":8},"source":"../node_modules/hast-util-whitespace/index.js","original":{"line":19,"column":14},"name":"value"},{"generated":{"line":25,"column":13},"source":"../node_modules/hast-util-whitespace/index.js","original":{"line":19,"column":19}},{"generated":{"line":25,"column":17},"source":"../node_modules/hast-util-whitespace/index.js","original":{"line":19,"column":23}},{"generated":{"line":25,"column":19},"source":"../node_modules/hast-util-whitespace/index.js","original":{"line":19,"column":25}},{"generated":{"line":25,"column":22},"source":"../node_modules/hast-util-whitespace/index.js","original":{"line":20,"column":8},"name":"thing"},{"generated":{"line":25,"column":27},"source":"../node_modules/hast-util-whitespace/index.js","original":{"line":20,"column":13}},{"generated":{"line":27,"column":2},"source":"../node_modules/hast-util-whitespace/index.js","original":{"line":22,"column":2}},{"generated":{"line":28,"column":2},"source":"../node_modules/hast-util-whitespace/index.js","original":{"line":23,"column":2}},{"generated":{"line":29,"column":2},"source":"../node_modules/hast-util-whitespace/index.js","original":{"line":24,"column":2}},{"generated":{"line":29,"column":9},"source":"../node_modules/hast-util-whitespace/index.js","original":{"line":24,"column":9}},{"generated":{"line":29,"column":16},"source":"../node_modules/hast-util-whitespace/index.js","original":{"line":24,"column":16},"name":"value"},{"generated":{"line":29,"column":21},"source":"../node_modules/hast-util-whitespace/index.js","original":{"line":24,"column":21}},{"generated":{"line":29,"column":26},"source":"../node_modules/hast-util-whitespace/index.js","original":{"line":24,"column":26}},{"generated":{"line":29,"column":34},"source":"../node_modules/hast-util-whitespace/index.js","original":{"line":24,"column":34}},{"generated":{"line":29,"column":38},"source":"../node_modules/hast-util-whitespace/index.js","original":{"line":24,"column":38},"name":"value"},{"generated":{"line":29,"column":43},"source":"../node_modules/hast-util-whitespace/index.js","original":{"line":24,"column":43}},{"generated":{"line":29,"column":44},"source":"../node_modules/hast-util-whitespace/index.js","original":{"line":24,"column":44},"name":"replace"},{"generated":{"line":29,"column":51},"source":"../node_modules/hast-util-whitespace/index.js","original":{"line":24,"column":51}},{"generated":{"line":29,"column":52},"source":"../node_modules/hast-util-whitespace/index.js","original":{"line":24,"column":52}},{"generated":{"line":29,"column":66},"source":"../node_modules/hast-util-whitespace/index.js","original":{"line":24,"column":66}},{"generated":{"line":29,"column":68},"source":"../node_modules/hast-util-whitespace/index.js","original":{"line":24,"column":68}},{"generated":{"line":29,"column":70},"source":"../node_modules/hast-util-whitespace/index.js","original":{"line":24,"column":70}},{"generated":{"line":29,"column":71},"source":"../node_modules/hast-util-whitespace/index.js","original":{"line":24,"column":71}},{"generated":{"line":29,"column":76},"source":"../node_modules/hast-util-whitespace/index.js","original":{"line":24,"column":76}},{"generated":{"line":29,"column":78},"source":"../node_modules/hast-util-whitespace/index.js","original":{"line":24,"column":78}},{"generated":{"line":30,"column":0},"source":"../node_modules/hast-util-whitespace/index.js","original":{"line":25,"column":0}}],"sources":{"../node_modules/hast-util-whitespace/index.js":"/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {unknown} thing\n *   Thing to check (typically `Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`).\n *   If a node is passed it must be a `Text` node, whose `value` field is\n *   checked.\n */\nexport function whitespace(thing) {\n  /** @type {string} */\n  const value =\n    // @ts-expect-error looks like a node.\n    thing && typeof thing === 'object' && thing.type === 'text'\n      ? // @ts-expect-error looks like a text.\n        thing.value || ''\n      : thing\n\n  // HTML whitespace expression.\n  // See <https://infra.spec.whatwg.org/#ascii-whitespace>.\n  return typeof value === 'string' && value.replace(/[ \\t\\n\\f\\r]/g, '') === ''\n}\n"},"lineCount":null}},"error":null,"hash":"680f430dd59b62389400332843e32a91","cacheData":{"env":{}}}