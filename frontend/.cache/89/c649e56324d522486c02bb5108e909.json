{"id":"../node_modules/mdast-util-to-markdown/lib/util/association.js","dependencies":[{"name":"C:\\Users\\user\\Documents\\GitHub\\tradingview-chatpad\\package.json","includedInParent":true,"mtime":1682908427806},{"name":"C:\\Users\\user\\Documents\\GitHub\\tradingview-chatpad\\node_modules\\mdast-util-to-markdown\\package.json","includedInParent":true,"mtime":1682908396505},{"name":"micromark-util-decode-string","loc":{"line":5,"column":27,"index":100},"parent":"C:\\Users\\user\\Documents\\GitHub\\tradingview-chatpad\\node_modules\\mdast-util-to-markdown\\lib\\util\\association.js","resolved":"C:\\Users\\user\\Documents\\GitHub\\tradingview-chatpad\\node_modules\\micromark-util-decode-string\\index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.association = association;\nvar _micromarkUtilDecodeString = require(\"micromark-util-decode-string\");\n/**\n * @typedef {import('../types.js').AssociationId} AssociationId\n */\n\n/**\n * Get an identifier from an association to match it to others.\n *\n * Associations are nodes that match to something else through an ID:\n * <https://github.com/syntax-tree/mdast#association>.\n *\n * The `label` of an association is the string value: character escapes and\n * references work, and casing is intact.\n * The `identifier` is used to match one association to another:\n * controversially, character escapes and references don’t work in this\n * matching: `&copy;` does not match `©`, and `\\+` does not match `+`.\n *\n * But casing is ignored (and whitespace) is trimmed and collapsed: ` A\\nb`\n * matches `a b`.\n * So, we do prefer the label when figuring out how we’re going to serialize:\n * it has whitespace, casing, and we can ignore most useless character\n * escapes and all character references.\n *\n * @type {AssociationId}\n */\nfunction association(node) {\n  if (node.label || !node.identifier) {\n    return node.label || '';\n  }\n  return (0, _micromarkUtilDecodeString.decodeString)(node.identifier);\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":7,"column":0},"source":"../node_modules/mdast-util-to-markdown/lib/util/association.js","original":{"line":5,"column":0}},{"generated":{"line":7,"column":4},"source":"../node_modules/mdast-util-to-markdown/lib/util/association.js","original":{"line":5,"column":0},"name":"_micromarkUtilDecodeString"},{"generated":{"line":7,"column":30},"source":"../node_modules/mdast-util-to-markdown/lib/util/association.js","original":{"line":5,"column":0}},{"generated":{"line":7,"column":33},"source":"../node_modules/mdast-util-to-markdown/lib/util/association.js","original":{"line":5,"column":0},"name":"require"},{"generated":{"line":7,"column":40},"source":"../node_modules/mdast-util-to-markdown/lib/util/association.js","original":{"line":5,"column":0}},{"generated":{"line":8,"column":0},"source":"../node_modules/mdast-util-to-markdown/lib/util/association.js","original":{"line":1,"column":0}},{"generated":{"line":9,"column":0},"source":"../node_modules/mdast-util-to-markdown/lib/util/association.js","original":{"line":2,"column":0}},{"generated":{"line":10,"column":0},"source":"../node_modules/mdast-util-to-markdown/lib/util/association.js","original":{"line":3,"column":0}},{"generated":{"line":12,"column":0},"source":"../node_modules/mdast-util-to-markdown/lib/util/association.js","original":{"line":7,"column":0}},{"generated":{"line":13,"column":0},"source":"../node_modules/mdast-util-to-markdown/lib/util/association.js","original":{"line":8,"column":0}},{"generated":{"line":14,"column":0},"source":"../node_modules/mdast-util-to-markdown/lib/util/association.js","original":{"line":9,"column":0}},{"generated":{"line":15,"column":0},"source":"../node_modules/mdast-util-to-markdown/lib/util/association.js","original":{"line":10,"column":0}},{"generated":{"line":16,"column":0},"source":"../node_modules/mdast-util-to-markdown/lib/util/association.js","original":{"line":11,"column":0}},{"generated":{"line":17,"column":0},"source":"../node_modules/mdast-util-to-markdown/lib/util/association.js","original":{"line":12,"column":0}},{"generated":{"line":18,"column":0},"source":"../node_modules/mdast-util-to-markdown/lib/util/association.js","original":{"line":13,"column":0}},{"generated":{"line":19,"column":0},"source":"../node_modules/mdast-util-to-markdown/lib/util/association.js","original":{"line":14,"column":0}},{"generated":{"line":20,"column":0},"source":"../node_modules/mdast-util-to-markdown/lib/util/association.js","original":{"line":15,"column":0}},{"generated":{"line":21,"column":0},"source":"../node_modules/mdast-util-to-markdown/lib/util/association.js","original":{"line":16,"column":0}},{"generated":{"line":22,"column":0},"source":"../node_modules/mdast-util-to-markdown/lib/util/association.js","original":{"line":17,"column":0}},{"generated":{"line":23,"column":0},"source":"../node_modules/mdast-util-to-markdown/lib/util/association.js","original":{"line":18,"column":0}},{"generated":{"line":24,"column":0},"source":"../node_modules/mdast-util-to-markdown/lib/util/association.js","original":{"line":19,"column":0}},{"generated":{"line":25,"column":0},"source":"../node_modules/mdast-util-to-markdown/lib/util/association.js","original":{"line":20,"column":0}},{"generated":{"line":26,"column":0},"source":"../node_modules/mdast-util-to-markdown/lib/util/association.js","original":{"line":21,"column":0}},{"generated":{"line":27,"column":0},"source":"../node_modules/mdast-util-to-markdown/lib/util/association.js","original":{"line":22,"column":0}},{"generated":{"line":28,"column":0},"source":"../node_modules/mdast-util-to-markdown/lib/util/association.js","original":{"line":23,"column":0}},{"generated":{"line":29,"column":0},"source":"../node_modules/mdast-util-to-markdown/lib/util/association.js","original":{"line":24,"column":0}},{"generated":{"line":30,"column":0},"source":"../node_modules/mdast-util-to-markdown/lib/util/association.js","original":{"line":25,"column":0}},{"generated":{"line":31,"column":0},"source":"../node_modules/mdast-util-to-markdown/lib/util/association.js","original":{"line":26,"column":0}},{"generated":{"line":32,"column":0},"source":"../node_modules/mdast-util-to-markdown/lib/util/association.js","original":{"line":27,"column":7}},{"generated":{"line":32,"column":9},"source":"../node_modules/mdast-util-to-markdown/lib/util/association.js","original":{"line":27,"column":16},"name":"association"},{"generated":{"line":32,"column":20},"source":"../node_modules/mdast-util-to-markdown/lib/util/association.js","original":{"line":27,"column":27},"name":"association"},{"generated":{"line":32,"column":21},"source":"../node_modules/mdast-util-to-markdown/lib/util/association.js","original":{"line":27,"column":28},"name":"node"},{"generated":{"line":32,"column":25},"source":"../node_modules/mdast-util-to-markdown/lib/util/association.js","original":{"line":27,"column":32}},{"generated":{"line":32,"column":27},"source":"../node_modules/mdast-util-to-markdown/lib/util/association.js","original":{"line":27,"column":34}},{"generated":{"line":33,"column":2},"source":"../node_modules/mdast-util-to-markdown/lib/util/association.js","original":{"line":28,"column":2}},{"generated":{"line":33,"column":6},"source":"../node_modules/mdast-util-to-markdown/lib/util/association.js","original":{"line":28,"column":6},"name":"node"},{"generated":{"line":33,"column":10},"source":"../node_modules/mdast-util-to-markdown/lib/util/association.js","original":{"line":28,"column":10}},{"generated":{"line":33,"column":11},"source":"../node_modules/mdast-util-to-markdown/lib/util/association.js","original":{"line":28,"column":11},"name":"label"},{"generated":{"line":33,"column":16},"source":"../node_modules/mdast-util-to-markdown/lib/util/association.js","original":{"line":28,"column":16}},{"generated":{"line":33,"column":20},"source":"../node_modules/mdast-util-to-markdown/lib/util/association.js","original":{"line":28,"column":20}},{"generated":{"line":33,"column":21},"source":"../node_modules/mdast-util-to-markdown/lib/util/association.js","original":{"line":28,"column":21},"name":"node"},{"generated":{"line":33,"column":25},"source":"../node_modules/mdast-util-to-markdown/lib/util/association.js","original":{"line":28,"column":25}},{"generated":{"line":33,"column":26},"source":"../node_modules/mdast-util-to-markdown/lib/util/association.js","original":{"line":28,"column":26},"name":"identifier"},{"generated":{"line":33,"column":36},"source":"../node_modules/mdast-util-to-markdown/lib/util/association.js","original":{"line":28,"column":36}},{"generated":{"line":33,"column":38},"source":"../node_modules/mdast-util-to-markdown/lib/util/association.js","original":{"line":28,"column":38}},{"generated":{"line":34,"column":4},"source":"../node_modules/mdast-util-to-markdown/lib/util/association.js","original":{"line":29,"column":4}},{"generated":{"line":34,"column":11},"source":"../node_modules/mdast-util-to-markdown/lib/util/association.js","original":{"line":29,"column":11},"name":"node"},{"generated":{"line":34,"column":15},"source":"../node_modules/mdast-util-to-markdown/lib/util/association.js","original":{"line":29,"column":15}},{"generated":{"line":34,"column":16},"source":"../node_modules/mdast-util-to-markdown/lib/util/association.js","original":{"line":29,"column":16},"name":"label"},{"generated":{"line":34,"column":21},"source":"../node_modules/mdast-util-to-markdown/lib/util/association.js","original":{"line":29,"column":21}},{"generated":{"line":34,"column":25},"source":"../node_modules/mdast-util-to-markdown/lib/util/association.js","original":{"line":29,"column":25}},{"generated":{"line":34,"column":27},"source":"../node_modules/mdast-util-to-markdown/lib/util/association.js","original":{"line":29,"column":27}},{"generated":{"line":35,"column":2},"source":"../node_modules/mdast-util-to-markdown/lib/util/association.js","original":{"line":30,"column":2}},{"generated":{"line":36,"column":2},"source":"../node_modules/mdast-util-to-markdown/lib/util/association.js","original":{"line":32,"column":2}},{"generated":{"line":36,"column":9},"source":"../node_modules/mdast-util-to-markdown/lib/util/association.js","original":{"line":32,"column":9}},{"generated":{"line":36,"column":13},"source":"../node_modules/mdast-util-to-markdown/lib/util/association.js","original":{"line":32,"column":9},"name":"decodeString"},{"generated":{"line":36,"column":52},"source":"../node_modules/mdast-util-to-markdown/lib/util/association.js","original":{"line":32,"column":21}},{"generated":{"line":36,"column":54},"source":"../node_modules/mdast-util-to-markdown/lib/util/association.js","original":{"line":32,"column":22},"name":"node"},{"generated":{"line":36,"column":58},"source":"../node_modules/mdast-util-to-markdown/lib/util/association.js","original":{"line":32,"column":26}},{"generated":{"line":36,"column":59},"source":"../node_modules/mdast-util-to-markdown/lib/util/association.js","original":{"line":32,"column":27},"name":"identifier"},{"generated":{"line":36,"column":69},"source":"../node_modules/mdast-util-to-markdown/lib/util/association.js","original":{"line":32,"column":37}},{"generated":{"line":36,"column":70},"source":"../node_modules/mdast-util-to-markdown/lib/util/association.js","original":{"line":32,"column":38}},{"generated":{"line":37,"column":0},"source":"../node_modules/mdast-util-to-markdown/lib/util/association.js","original":{"line":33,"column":0}}],"sources":{"../node_modules/mdast-util-to-markdown/lib/util/association.js":"/**\n * @typedef {import('../types.js').AssociationId} AssociationId\n */\n\nimport {decodeString} from 'micromark-util-decode-string'\n\n/**\n * Get an identifier from an association to match it to others.\n *\n * Associations are nodes that match to something else through an ID:\n * <https://github.com/syntax-tree/mdast#association>.\n *\n * The `label` of an association is the string value: character escapes and\n * references work, and casing is intact.\n * The `identifier` is used to match one association to another:\n * controversially, character escapes and references don’t work in this\n * matching: `&copy;` does not match `©`, and `\\+` does not match `+`.\n *\n * But casing is ignored (and whitespace) is trimmed and collapsed: ` A\\nb`\n * matches `a b`.\n * So, we do prefer the label when figuring out how we’re going to serialize:\n * it has whitespace, casing, and we can ignore most useless character\n * escapes and all character references.\n *\n * @type {AssociationId}\n */\nexport function association(node) {\n  if (node.label || !node.identifier) {\n    return node.label || ''\n  }\n\n  return decodeString(node.identifier)\n}\n"},"lineCount":null}},"error":null,"hash":"660a6ba15b0fb54cc4d5157cb41a9486","cacheData":{"env":{}}}